{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"access"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"subject","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Member"},{"text":">) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Perceptible","kind":"typeIdentifier","preciseIdentifier":"s:14PerceptionCore11PerceptibleP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/access(_:keypath:)-3f2tg"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/access(_:keyPath:)-3f2tg","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"access","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Member","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"text":">)","kind":"text"}],"roleHeading":"Instance Method","title":"access(_:keyPath:)","externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV6access_7keyPathyx_s03KeyH0Cyxq_Gt14PerceptionCore11PerceptibleRzr0_lF","extendedModule":"ComposableArchitecture"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"title":"ObservationStateRegistrar","navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservationStateRegistrar","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","role":"symbol","title":"ObservableState()","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestate()","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/access(_:keyPath:)-3f2tg":{"abstract":[],"title":"access(_:keyPath:)","type":"topic","url":"\/documentation\/composablearchitecture\/observationstateregistrar\/access(_:keypath:)-3f2tg","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/access(_:keyPath:)-3f2tg","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"access","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":", ","kind":"text"},{"text":"Member","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">)"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","role":"symbol","title":"State","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/state","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}]}}}