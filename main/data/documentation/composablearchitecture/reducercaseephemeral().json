{"metadata":{"externalID":"s:22ComposableArchitecture20ReducerCaseEphemeralyycfm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","symbolKind":"macro","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Macro","title":"ReducerCaseEphemeral()"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"],"anchor":"Enum-reducers","title":"Enum reducers"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"text":"(peer, names: named(`_`)) ","kind":"text"},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Apply this reducer to any cases of an enum reducer that holds onto state conforming to the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState","isActive":true,"type":"reference"},{"text":" protocol, such as ","type":"text"},{"code":"AlertState","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ConfirmationDialogState"},{"type":"text","text":":"}]},{"type":"codeListing","code":["@Reducer","enum Destination {","  @ReducerCaseEphemeral","  case alert(AlertState<Alert>)","  \/\/ ...","","  enum Alert {","    case saveButtonTapped","    case discardButtonTapped","  }","}"],"syntax":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/reducercaseephemeral()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"]]},"sections":[],"abstract":[{"type":"text","text":"Marks the case of an enum reducer as holding onto “ephemeral” state."}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"abstract":[{"text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"into the rest of the reducer besides state."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerCaseIgnored","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","type":"topic","url":"\/documentation\/composablearchitecture\/reducercaseignored()","role":"symbol","kind":"symbol","title":"ReducerCaseIgnored()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState","navigatorTitle":[{"text":"CaseReducerState","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/casereducerstate","title":"CaseReducerState","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseReducerState"}],"role":"symbol","abstract":[{"type":"text","text":"A state type that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"title":"Reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol for a type."}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","url":"\/documentation\/composablearchitecture\/reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"abstract":[{"type":"text","text":"A reducer represented by multiple enum cases."}],"url":"\/documentation\/composablearchitecture\/casereducer","navigatorTitle":[{"kind":"identifier","text":"CaseReducer"}],"title":"CaseReducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseReducer"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer(state:action:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer(state:action:)","title":"Reducer(state:action:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"kind":"text","text":"("},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"_SynthesizedConformance","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV"},{"text":"..., ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"_SynthesizedConformance","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV"},{"text":"...)","kind":"text"}],"kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"An overload of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" that takes a description of protocol conformances to synthesize on","type":"text"},{"type":"text","text":" "},{"text":"the State and Action types","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_EphemeralState":{"url":"\/documentation\/composablearchitecture\/_ephemeralstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState","navigatorTitle":[{"kind":"identifier","text":"_EphemeralState"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Loosely represents features that are only briefly shown and the first time they are interacted"},{"text":" ","type":"text"},{"text":"with they are dismissed. Such features do not manage any behavior on the inside.","type":"text"}],"title":"_EphemeralState","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"_EphemeralState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"title":"ReducerCaseEphemeral()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducercaseephemeral()","role":"symbol","type":"topic","abstract":[{"text":"Marks the case of an enum reducer as holding onto “ephemeral” state.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()"}}}