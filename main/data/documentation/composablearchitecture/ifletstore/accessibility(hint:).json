{"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibility","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"hint"},{"text":": ","kind":"text"},{"text":"Text","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15ModifiedContentV","text":"ModifiedContent","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV","text":"AccessibilityAttachmentModifier","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"accessibility","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"hint"},{"kind":"text","text":": "},{"text":"Text","preciseIdentifier":"s:7SwiftUI4TextV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15ModifiedContentV","text":"ModifiedContent","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"AccessibilityAttachmentModifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV"},{"text":">","kind":"text"}],"externalID":"s:7SwiftUI4ViewPAAE13accessibility4hintAA15ModifiedContentVyxAA31AccessibilityAttachmentModifierVGAA4TextV_tF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"symbolKind":"method","extendedModule":"SwiftUICore","title":"accessibility(hint:)","roleHeading":"Instance Method","platforms":[{"introducedAt":"13.0","deprecatedAt":"100000.0","renamed":"accessibilityHint(_:)","beta":false,"deprecated":false,"unavailable":false,"name":"iOS"},{"deprecated":false,"name":"macOS","beta":false,"unavailable":false,"introducedAt":"10.15","renamed":"accessibilityHint(_:)","deprecatedAt":"100000.0"},{"unavailable":false,"beta":false,"name":"tvOS","deprecatedAt":"100000.0","renamed":"accessibilityHint(_:)","introducedAt":"13.0","deprecated":false},{"unavailable":false,"beta":false,"deprecatedAt":"100000.0","deprecated":false,"introducedAt":"1.0","name":"visionOS","renamed":"accessibilityHint(_:)"},{"unavailable":false,"name":"watchOS","beta":false,"renamed":"accessibilityHint(_:)","introducedAt":"6.0","deprecated":false,"deprecatedAt":"100000.0"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibility(hint:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/accessibility(hint:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.accessibility(hint:)"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"deprecated":true,"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","role":"collectionGroup","title":"View Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/accessibility(hint:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibility(hint:)","kind":"symbol","title":"accessibility(hint:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"accessibility"},{"kind":"text","text":"("},{"text":"hint","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Text","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV"},{"text":") -> ","kind":"text"},{"text":"ModifiedContent","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ModifiedContentV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AccessibilityAttachmentModifier","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV"},{"text":">","kind":"text"}],"abstract":[],"type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore\/accessibility(hint:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"}}}