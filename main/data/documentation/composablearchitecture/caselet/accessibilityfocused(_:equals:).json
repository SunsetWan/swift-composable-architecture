{"sections":[],"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.accessibilityFocused(_:equals:)","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"accessibilityFocused","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:7SwiftUI23AccessibilityFocusStateV","text":"AccessibilityFocusState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI23AccessibilityFocusStateV7BindingV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"equals"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"title":"accessibilityFocused(_:equals:)","platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"15.0","beta":false},{"introducedAt":"12.0","name":"macOS","beta":false,"deprecated":false,"unavailable":false},{"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"15.0","unavailable":false},{"beta":false,"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"8.0"}],"extendedModule":"SwiftUICore","symbolKind":"method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE20accessibilityFocused_6equalsQrAA23AccessibilityFocusStateV7BindingVyqd___G_qd__tSHRd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/accessibilityfocused(_:equals:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"accessibilityFocused","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"binding"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI23AccessibilityFocusStateV","text":"AccessibilityFocusState","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI23AccessibilityFocusStateV7BindingV"},{"kind":"text","text":", "},{"text":"equals","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityFocused(_:equals:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","role":"collectionGroup","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/accessibilityFocused(_:equals:)":{"title":"accessibilityFocused(_:equals:)","url":"\/documentation\/composablearchitecture\/caselet\/accessibilityfocused(_:equals:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityFocused(_:equals:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibilityFocused","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"AccessibilityFocusState","preciseIdentifier":"s:7SwiftUI23AccessibilityFocusStateV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI23AccessibilityFocusStateV7BindingV","text":"Binding"},{"kind":"text","text":", "},{"kind":"externalParam","text":"equals"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"title":"CaseLet","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"type":"topic"}}}