{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toCaseState"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"EnumState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":"?, "},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fromCaseAction"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"kind":"text","text":") -> "},{"text":"EnumAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder"},{"kind":"text","text":" "},{"text":"then","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"content","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"CaseState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#fileID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#filePath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"toCaseState","content":[{"type":"paragraph","inlineContent":[{"text":"A function that can extract a case of switch store state, which can be","type":"text"},{"text":" ","type":"text"},{"text":"specified using case path literal syntax, ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"e.g.","type":"text"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"\/State.case"},{"text":".","type":"text"}]}]},{"name":"fromCaseAction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that can embed a case action in a switch store action."}]}]},{"name":"content","content":[{"inlineContent":[{"type":"text","text":"A function that is given a store of the given case’s state and returns a view"},{"type":"text","text":" "},{"type":"text","text":"that is visible only when the switch store’s state matches."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The fileID."}],"type":"paragraph"}],"name":"fileID"},{"name":"filePath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The filePath."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The line."}],"type":"paragraph"}],"name":"line"},{"name":"column","content":[{"type":"paragraph","inlineContent":[{"text":"The column.","type":"text"}]}]}]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'switch' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-SwitchStore-and-CaseLet-with-switch-and-case]"}],"type":"paragraph"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/init(_:action:then:fileid:filepath:line:column:)"]}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(("},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"EnumAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":", "},{"text":"CaseAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"roleHeading":"Initializer","title":"init(_:action:then:fileID:filePath:line:column:)","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"init","externalID":"s:22ComposableArchitecture7CaseLetV_6action4then6fileID0G4Path4line6columnACyxq_q0_q1_q2_Gq0_Sgxc_q_q1_cq2_AA5StoreCyq0_q1_Gcs12StaticStringVAPS2utcfc","role":"symbol","platforms":[]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)"},"abstract":[{"type":"text","text":"Initializes a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" view that computes content depending on if a store of enum state"},{"text":" ","type":"text"},{"text":"matches a particular case.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(_:action:then:fileID:filePath:line:column:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"EnumState"},{"kind":"text","text":") -> "},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EnumAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"title":"init(_:action:then:fileID:filePath:line:column:)","deprecated":true,"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","abstract":[{"text":"Initializes a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" view that computes content depending on if a store of enum state"},{"type":"text","text":" "},{"text":"matches a particular case.","type":"text"}],"url":"\/documentation\/composablearchitecture\/caselet\/init(_:action:then:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","title":"Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"title":"CaseLet","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"}}}