{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"environment","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"object"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : AnyObject, "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:14PerceptionCore11PerceptibleP","text":"Perceptible","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.environment(_:)","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"title":"environment(_:)","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewP14PerceptionCoreE11environmentyQrqd__SgRld__CAD11PerceptibleRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"environment","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/environment(_:)-7rlkk"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/environment(_:)-7rlkk","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","role":"collectionGroup","title":"View Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"deprecated":true,"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/environment(_:)-7rlkk":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/environment(_:)-7rlkk","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"environment","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"environment(_:)","url":"\/documentation\/composablearchitecture\/ifletstore\/environment(_:)-7rlkk"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"}}}