{"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}],"title":"CaseLet","roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"externalID":"s:22ComposableArchitecture7CaseLetV","role":"symbol","platforms":[],"modules":[{"name":"ComposableArchitecture"}]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"],"type":"conformsTo","kind":"relationships"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true,"type":"reference"},{"type":"text","text":"."}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use 'switch' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-SwitchStore-and-CaseLet-with-switch-and-case]","type":"text"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"EnumState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"EnumAction"},{"text":", ","kind":"text"},{"text":"CaseState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"platforms":["macOS"],"languages":["swift"]}]}],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)"],"anchor":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState"],"title":"Instance Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"],"anchor":"Default-Implementations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/content":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","kind":"symbol","title":"content","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"content"},{"kind":"text","text":": ("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CaseState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"}],"abstract":[],"type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet\/content","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","role":"collectionGroup","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"title":"CaseLet","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(_:action:then:fileID:filePath:line:column:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"EnumState"},{"kind":"text","text":") -> "},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EnumAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"title":"init(_:action:then:fileID:filePath:line:column:)","deprecated":true,"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","abstract":[{"text":"Initializes a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" view that computes content depending on if a store of enum state"},{"type":"text","text":" "},{"text":"matches a particular case.","type":"text"}],"url":"\/documentation\/composablearchitecture\/caselet\/init(_:action:then:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(state:then:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"then","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(state:then:)","kind":"symbol","conformance":{"constraints":[{"code":"EnumAction","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"CaseAction"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Content"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)","abstract":[{"type":"text","text":"Initializes a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" view that computes content depending on if a store of enum state","type":"text"},{"type":"text","text":" "},{"text":"matches a particular case.","type":"text"}],"url":"\/documentation\/composablearchitecture\/caselet\/init(state:then:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/fromCaseAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","kind":"symbol","title":"fromCaseAction","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromCaseAction","kind":"identifier"},{"text":": (","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EnumAction","kind":"typeIdentifier"}],"abstract":[],"type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet\/fromcaseaction","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/toCaseState":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toCaseState","kind":"identifier"},{"text":": (","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"toCaseState","deprecated":true,"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState","abstract":[],"url":"\/documentation\/composablearchitecture\/caselet\/tocasestate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/body":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","kind":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[],"type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet\/body","role":"symbol"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"type":"unresolvable","title":"SwiftUICore.View","identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"}}}