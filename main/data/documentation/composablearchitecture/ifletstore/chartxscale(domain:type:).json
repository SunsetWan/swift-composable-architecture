{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartXScale"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Domain"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"type"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Charts9ScaleTypeV","text":"ScaleType","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:7SwiftUI4ViewP6ChartsE11chartXScale6domain4typeQrqd___AD9ScaleTypeVSgtAD0I6DomainRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","platforms":[{"unavailable":false,"introducedAt":"16.0","beta":false,"deprecated":false,"name":"iOS"},{"name":"macOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0"},{"deprecated":false,"introducedAt":"16.0","unavailable":false,"name":"tvOS","beta":false},{"introducedAt":"9.0","deprecated":false,"beta":false,"unavailable":false,"name":"watchOS"}],"extendedModule":"SwiftUICore","roleHeading":"Instance Method","title":"chartXScale(domain:type:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartxscale(domain:type:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartXScale(domain:type:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.chartXScale(domain:type:)"},{"type":"text","text":"."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartXScale","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Domain"},{"kind":"text","text":">("},{"text":"domain","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Domain"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"text":"ScaleType","kind":"typeIdentifier","preciseIdentifier":"s:6Charts9ScaleTypeV"},{"text":"? = nil) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Domain"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"ScaleDomain","preciseIdentifier":"s:6Charts11ScaleDomainP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartXScale(domain:type:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartXScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"domain","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Domain","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ScaleType","preciseIdentifier":"s:6Charts9ScaleTypeV","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/chartxscale(domain:type:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartXScale(domain:type:)","title":"chartXScale(domain:type:)","kind":"symbol","type":"topic","role":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","role":"collectionGroup","title":"View Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"deprecated":true,"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}]}}}