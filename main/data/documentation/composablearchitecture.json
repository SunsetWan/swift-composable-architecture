{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"kind":"symbol","hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Additional-Resources","type":"heading","level":2,"text":"Additional Resources"},{"items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","type":"reference","isActive":true}]}]}],"type":"unorderedList"},{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"This library provides a few core tools that can be used to build applications of varying purpose and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter"},{"text":" ","type":"text"},{"text":"day-to-day when building applications, such as:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"State management"}]}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"How to manage the state of your application using simple value types, and share state across"},{"type":"text","text":" "},{"text":"many screens so that mutations in one screen can be immediately observed in another screen.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composition"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to break down large features into smaller components that can be extracted to their own,"},{"type":"text","text":" "},{"type":"text","text":"isolated modules and be easily glued back together to form the feature."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Side effects","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"How to let certain parts of the application talk to the outside world in the most testable and","type":"text"},{"type":"text","text":" "},{"text":"understandable way possible.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Testing","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"How to not only test a feature built in the architecture, but also write integration tests for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"features that have been composed of many parts, and write end-to-end tests to understand how"},{"text":" ","type":"text"},{"text":"side effects influence your application. This allows you to make strong guarantees that your","type":"text"},{"type":"text","text":" "},{"type":"text","text":"business logic is running in the way you expect."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Ergonomics","type":"text"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture"]}],"topicSections":[{"anchor":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"],"title":"Essentials"},{"title":"Tutorials","identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"],"anchor":"Tutorials"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"title":"State management","anchor":"State-management"},{"anchor":"Testing","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"],"title":"Testing"},{"anchor":"Integrations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"],"title":"Integrations"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"],"anchor":"Migration-guides","title":"Migration guides"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"],"title":"Structures","anchor":"Structures","generated":true},{"generated":true,"anchor":"Functions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:isolation:operation:)"],"title":"Functions"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore"],"title":"Extended Modules","generated":true,"anchor":"Extended-Modules"}],"seeAlsoSections":[{"anchor":"Related-Documentation","abstract":[{"type":"text","text":"The collection of videos from "},{"identifier":"https:\/\/www.pointfree.co","isActive":true,"type":"reference"},{"text":" that dive deep into the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"development of the library."}],"title":"Related Documentation","identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"]}],"sections":[],"metadata":{"externalID":"ComposableArchitecture","symbolKind":"module","title":"ComposableArchitecture","roleHeading":"Framework","role":"collection","modules":[{"name":"ComposableArchitecture"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","url":"\/documentation\/composablearchitecture\/dependencymanagement","type":"topic","role":"article","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"text":" ","type":"text"},{"type":"text","text":"any reducer."}],"title":"Dependencies","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LiveFileStorage()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","url":"\/documentation\/composablearchitecture\/livefilestorage()","abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"LiveFileStorage","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Sharing11FileStorageV","text":"FileStorage"}],"deprecated":true,"title":"LiveFileStorage()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"url":"\/documentation\/composablearchitecture\/migrationguides","kind":"article","role":"collectionGroup","title":"Migration guides","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","type":"topic","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Sharing":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","url":"\/documentation\/composablearchitecture\/sharing","role":"collection","kind":"symbol","title":"Sharing","type":"topic","abstract":[]},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a","type":"text"},{"text":" ","type":"text"},{"text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be","type":"text"},{"type":"text","text":" "},{"text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"title":"Meet the Composable Architecture","role":"overview","type":"topic","url":"\/tutorials\/meetcomposablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","kind":"overview"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PerceptionCore":{"abstract":[],"title":"PerceptionCore","kind":"symbol","url":"\/documentation\/composablearchitecture\/perceptioncore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ","url":"\/documentation\/composablearchitecture\/faq","type":"topic","role":"article","abstract":[{"type":"text","text":"A collection of some of the most common questions and comments people have concerning the library."}],"kind":"article","title":"Frequently asked questions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","type":"topic","title":"Getting started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"text":" ","type":"text"},{"type":"text","text":"application."}],"role":"article","url":"\/documentation\/composablearchitecture\/gettingstarted"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","url":"\/documentation\/composablearchitecture\/swiftconcurrency","abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency."}],"role":"article","type":"topic","kind":"article","title":"Adopting Swift concurrency"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"title":"Discussions","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"link","titleInlineContent":[{"type":"text","text":"Discussions"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryFileStorage()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","url":"\/documentation\/composablearchitecture\/inmemoryfilestorage()","abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"InMemoryFileStorage","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:7Sharing11FileStorageV"}],"deprecated":true,"title":"InMemoryFileStorage()"},"https://www.pointfree.co/collections/composable-architecture":{"title":"Point-Free Videos","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","type":"link","titleInlineContent":[{"type":"text","text":"Point-Free Videos"}],"url":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","url":"\/documentation\/composablearchitecture\/swiftnavigation","abstract":[],"role":"collection","type":"topic","kind":"symbol","title":"SwiftNavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a UIKit application."}],"title":"UIKit Integration","kind":"article","url":"\/documentation\/composablearchitecture\/uikit","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","title":"AppStorageKeyPathKey","role":"symbol","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"type":"topic","deprecated":true,"kind":"symbol","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore":{"url":"\/documentation\/composablearchitecture\/swiftuicore","role":"collection","type":"topic","kind":"symbol","title":"SwiftUICore","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"kind":"article","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","url":"\/documentation\/composablearchitecture\/navigation","title":"Navigation"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","type":"topic","url":"\/tutorials\/buildingsyncups","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"text":" ","type":"text"},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"text":"domain modeling, controlling dependencies, and testability.","type":"text"}],"title":"Building SyncUps","kind":"overview","role":"overview"},"https://github.com/pointfreeco/swift-composable-architecture":{"title":"GitHub Repo","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","type":"link","titleInlineContent":[{"text":"GitHub Repo","type":"text"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","title":"Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"topic","title":"Sharing state","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"text":" ","type":"text"},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"role":"article","url":"\/documentation\/composablearchitecture\/sharingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","type":"topic","title":"Performance","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"role":"article","url":"\/documentation\/composablearchitecture\/performance"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withTaskCancellation(id:cancelInFlight:isolation:operation:)":{"abstract":[{"text":"Execute an operation with a cancellation identifier.","type":"text"}],"title":"withTaskCancellation(id:cancelInFlight:isolation:operation:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/withtaskcancellation(id:cancelinflight:isolation:operation:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:isolation:operation:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withTaskCancellation","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":" & ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"cancelInFlight","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"isolation","kind":"externalParam"},{"kind":"text","text":": "},{"text":"isolated","kind":"keyword"},{"text":" (any ","kind":"text"},{"text":"Actor","kind":"typeIdentifier","preciseIdentifier":"s:ScA"},{"text":")?, ","kind":"text"},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","title":"TestStore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","url":"\/documentation\/composablearchitecture\/teststore","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","url":"\/documentation\/composablearchitecture\/observationbackport","abstract":[{"text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as well as the caveats of using the backported tools."}],"role":"article","type":"topic","kind":"article","title":"Observation backport"}}}