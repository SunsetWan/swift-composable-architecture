{"kind":"symbol","metadata":{"roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxGs7KeyPathCy9CasePaths0K0Vyq_GAMyqd__GG_t5StateQyd__RszAK0K8PathableR_AA14BindableActionRd__lF","role":"symbol","title":"bindings(action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bindings"},{"kind":"text","text":"<"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","extendedModule":"ComposableArchitecture"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":" "},{"text":"toViewAction","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","text":"BindingViewStore"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"CasePathable","preciseIdentifier":"s:9CasePaths0A8PathableP"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"BindableAction","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"toViewAction","content":[{"type":"paragraph","inlineContent":[{"text":"A case path from action to a bindable view action.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A binding view store.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Useful for testing view state of a store."}],"type":"paragraph"},{"code":["let store = TestStore(LoginFeature.State()) {","  Login.Feature()","}","await store.send(.view(.set(\\.$email, \"blob@pointfree.co\"))) {","  $0.email = \"blob@pointfree.co\"","}","XCTAssertTrue(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")","","await store.send(.view(.set(\\.$password, \"whats-the-point?\"))) {","  $0.password = \"blob@pointfree.co\"","  $0.isFormValid = true","}","XCTAssertFalse(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")"],"type":"codeListing","syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings"],"title":"Bindings","generated":true,"anchor":"Bindings"}],"abstract":[{"text":"Returns a binding view store for this store.","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","title":"BindingViewState","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingViewStore"}],"navigatorTitle":[{"kind":"identifier","text":"BindingViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","role":"symbol","type":"topic","abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true,"type":"reference"},{"text":" values for a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":"."}],"kind":"symbol","title":"BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"title":"State","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction\/state","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"abstract":[{"type":"text","text":"The root state type that contains bindable fields."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings(action:)-2nhb5":{"title":"bindings(action:)","abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5","url":"\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5","type":"topic","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"title":"BindableAction","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindableAction","kind":"identifier"}],"navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"abstract":[{"text":"An action type that exposes a ","type":"text"},{"type":"codeVoice","code":"binding"},{"text":" case that holds a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true,"type":"reference"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","title":"TestStore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","url":"\/documentation\/composablearchitecture\/teststore","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","title":"BindingAction","role":"symbol","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingAction"}],"navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Action.State"},{"type":"text","text":" and "},{"code":"Action","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BindableAction"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","title":"bindings","abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"kind":"text","text":": "},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/bindings","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"type":"topic","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore","abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","title":"ViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreDeprecations":{"url":"\/documentation\/composablearchitecture\/teststoredeprecations","kind":"article","abstract":[{"text":"Review unsupported test store APIs and their replacements.","type":"text"}],"type":"topic","role":"collectionGroup","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"}}}