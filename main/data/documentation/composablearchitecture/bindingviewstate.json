{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"title":"BindingViewState","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}],"externalID":"s:22ComposableArchitecture16BindingViewStateV","role":"symbol","roleHeading":"Structure","symbolKind":"struct"},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Bindings","anchor":"Bindings","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@dynamicMemberLookup","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">","kind":"text"}]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Read ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","isActive":true},{"type":"text","text":" for more information."}]}],"kind":"content"}],"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"text":" ","type":"text"},{"text":"bindable in SwiftUI views.","type":"text"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue"],"generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"],"title":"Subscripts","generated":true,"anchor":"Subscripts"},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingviewstate"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/wrappedValue":{"title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/wrappedvalue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue","abstract":[]},"doc://ComposableArchitecture/s17CustomReflectableP":{"title":"Swift.CustomReflectable","identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP","type":"unresolvable"},"doc://ComposableArchitecture/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingViewStore"}],"navigatorTitle":[{"kind":"identifier","text":"BindingViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","role":"symbol","type":"topic","abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true,"type":"reference"},{"text":" values for a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":"."}],"kind":"symbol","title":"BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDebugStringConvertible-Implementations":{"abstract":[],"kind":"article","title":"CustomDebugStringConvertible Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdebugstringconvertible-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"url":"\/documentation\/composablearchitecture\/bindingstate","abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"text":" ","type":"text"},{"text":"in SwiftUI views.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"title":"BindingState","deprecated":true,"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","url":"\/documentation\/composablearchitecture\/bindings","abstract":[{"text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings.","type":"text"}],"kind":"article","title":"Working with SwiftUI bindings","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","title":"BindingViewState","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDumpRepresentable-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","kind":"article","abstract":[],"url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdumprepresentable-implementations","title":"CustomDumpRepresentable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"type":"topic","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore","abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","title":"ViewStore"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/projectedValue":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/projectedvalue","abstract":[],"kind":"symbol","title":"projectedValue"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Hashable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/hashable-implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations","kind":"article","type":"topic","abstract":[],"title":"Hashable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/equatable-implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/subscript(dynamicMember:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)","title":"subscript(dynamicMember:)","url":"\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)","role":"symbol","type":"topic","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","text":"BindingViewState"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">"}],"abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customreflectable-implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic"},"doc://ComposableArchitecture/10CustomDump0aB13RepresentableP":{"title":"CustomDump.CustomDumpRepresentable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","type":"unresolvable"}}}