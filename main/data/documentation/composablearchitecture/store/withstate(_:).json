{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store\/withstate(_:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withState","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A closure that takes the current state of the store as its sole argument. If","type":"text"},{"text":" ","type":"text"},{"text":"the closure has a return value, that value is also used as the return value of the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"withState"},{"type":"text","text":" method. The state argument reflects the current state of the store only for the"},{"type":"text","text":" "},{"text":"duration of the closureâ€™s execution, and is only observable over time, ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" by SwiftUI, if"},{"text":" ","type":"text"},{"type":"text","text":"it conforms to "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"body"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"A lightweight way of accessing store state when state is not observable and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"text":"unavailable.","type":"text"}],"type":"paragraph"}]}],"metadata":{"title":"withState(_:)","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture5StoreC9withStateyqd__qd__xXElF","symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"roleHeading":"Instance Method"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"},"abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"title":"Accessing state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef"],"generated":true,"anchor":"Accessing-state"}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"abstract":[],"title":"subscript(dynamicMember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Value"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","title":"Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","title":"withState(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withState","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"url":"\/documentation\/composablearchitecture\/observablestate","title":"ObservableState","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","title":"state","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","abstract":[{"type":"text","text":"Direct access to state in the store when "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}