{"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","title":"transformDependency(_:transform:)","symbolKind":"method","externalID":"s:22ComposableArchitecture7ReducerPAAE19transformDependency_0D0AA01_e10KeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_yqd__zctlF::SYNTHESIZED::s:22ComposableArchitecture5ScopeV","role":"symbol","extendedModule":"ComposableArchitecture"},"variants":[{"paths":["\/documentation\/composablearchitecture\/scope\/transformdependency(_:transform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A key path that indicates the property of the "},{"type":"codeVoice","code":"DependencyValues"},{"text":" structure to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transform."}]}],"name":"keyPath"},{"name":"transform","content":[{"inlineContent":[{"type":"text","text":"A closure that is handed a mutable instance of the value specified by the key"},{"type":"text","text":" "},{"text":"path.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This is similar to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/dependency(_:_:)"},{"type":"text","text":", except it allows you to mutate a dependency value"},{"text":" ","type":"text"},{"text":"directly. This can be handy when you want to alter a dependency but still use its current","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, suppose you want to see when a particular endpoint of a dependency gets called","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in your application. You can override that endpoint to insert a breakpoint or print statement,"},{"text":" ","type":"text"},{"text":"but still call out to the original endpoint:","type":"text"}]},{"type":"codeListing","code":["  Feature()","    .transformDependency(\\.speechClient) { speechClient in","      speechClient.requestAuthorization = {","        print(\"requestAuthorization\")","        try await speechClient.requestAuthorization()","      }","    }"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"You can also transform "},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"type":"text","text":" dependency values at once by using the "},{"code":"\\.self","type":"codeVoice"},{"type":"text","text":" key path:"}],"type":"paragraph"},{"code":["Feature()","  .transformDependency(\\.self) { dependencyValues in","    \/\/ Access to all dependencies in here","  }"],"syntax":"swift","type":"codeListing"},{"name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The trailing closure of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)","isActive":true},{"text":" is called for every","type":"text"},{"type":"text","text":" "},{"type":"text","text":"action sent to the reducer, and so you can expect it to be called many times in an"},{"type":"text","text":" "},{"text":"application’s lifecycle. This means you should typically not create dependencies in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure as that will cause a new dependency to be created everytime an action is sent."}]}],"style":"warning"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/transformDependency(_:transform:)":{"role":"symbol","type":"topic","title":"transformDependency(_:transform:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)","url":"\/documentation\/composablearchitecture\/scope\/transformdependency(_:transform:)","abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/Reducer-Implementations":{"url":"\/documentation\/composablearchitecture\/scope\/reducer-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article","title":"Reducer Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"kind":"symbol","title":"Scope","url":"\/documentation\/composablearchitecture\/scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/dependency(_:_:)":{"kind":"symbol","abstract":[{"text":"Sets the dependency value of the specified key path to the given value.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/scope\/dependency(_:_:)","title":"dependency(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/dependency(_:_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol"}}}