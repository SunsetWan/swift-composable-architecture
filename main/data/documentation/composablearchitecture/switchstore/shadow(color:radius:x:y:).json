{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/shadow(color:radius:x:y:)"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","extendedModule":"SwiftUICore","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"shadow","kind":"identifier"},{"kind":"text","text":"("},{"text":"color","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI5ColorV","text":"Color","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"radius","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":", ","kind":"text"},{"text":"x","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"y"},{"text":": ","kind":"text"},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","deprecated":false,"introducedAt":"13.0"},{"unavailable":false,"introducedAt":"10.15","name":"macOS","deprecated":false,"beta":false},{"beta":false,"introducedAt":"13.0","unavailable":false,"name":"tvOS","deprecated":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"6.0","unavailable":false}],"externalID":"s:7SwiftUI4ViewPAAE6shadow5color6radius1x1yQrAA5ColorV_14CoreFoundation7CGFloatVA2MtF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","symbolKind":"method","title":"shadow(color:radius:x:y:)","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"roleHeading":"Instance Method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.shadow(color:radius:x:y:)"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/shadow(color:radius:x:y:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shadow","kind":"identifier"},{"kind":"text","text":"("},{"text":"color","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI5ColorV","text":"Color","kind":"typeIdentifier"},{"text":" = Color(.sRGBLinear, white: 0, opacity: 0.33), ","kind":"text"},{"kind":"externalParam","text":"radius"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":" = 0, "},{"text":"y","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"text":" = 0) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"title":"View Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/shadow(color:radius:x:y:)":{"title":"shadow(color:radius:x:y:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/shadow(color:radius:x:y:)","url":"\/documentation\/composablearchitecture\/switchstore\/shadow(color:radius:x:y:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shadow","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"color"},{"text":": ","kind":"text"},{"text":"Color","preciseIdentifier":"s:7SwiftUI5ColorV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"radius","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":", ","kind":"text"},{"text":"x","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"y","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"title":"CaseLet","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"type":"topic"}}}