{"topicSections":[{"title":"Conformance","anchor":"Conformance","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"]},{"anchor":"Change-tracking","title":"Change tracking","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()"],"anchor":"Supporting-macros","title":"Supporting macros"}],"abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Observation10ObservableP","text":"Observable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","text":"ObservableState","preciseIdentifier":"s:22ComposableArchitecture15ObservableStateP"},{"kind":"text","text":") "},{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(member, names: named(_$id), named(_$observationRegistrar), named(_$willModify)) "},{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(memberAttribute) "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/observablestate()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"macro","roleHeading":"Macro","title":"ObservableState()","externalID":"s:22ComposableArchitecture15ObservableStateyycfm"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","role":"symbol","title":"State","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/state","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"title":"ObservationStateRegistrar","navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservationStateRegistrar","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableStateID","kind":"identifier"}],"abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","title":"ObservableStateID","kind":"symbol","url":"\/documentation\/composablearchitecture\/observablestateid","type":"topic","role":"symbol","navigatorTitle":[{"text":"ObservableStateID","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateIgnored()":{"title":"ObservationStateIgnored()","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/observationstateignored()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservationStateIgnored","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"url":"\/documentation\/composablearchitecture\/observablestate","title":"ObservableState","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","role":"symbol","title":"ObservableState()","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestate()","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateTracked()":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservationStateTracked","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","title":"ObservationStateTracked()","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/observationstatetracked()","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"}}}