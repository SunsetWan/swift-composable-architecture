{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/11Observation10ObservableP","doc:\/\/ComposableArchitecture\/14PerceptionCore11PerceptibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s12IdentifiableP","doc:\/\/ComposableArchitecture\/s8SendableP"]}],"topicSections":[{"anchor":"Creating-a-store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf"],"title":"Creating a store"},{"anchor":"Accessing-state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"],"title":"Accessing state"},{"anchor":"Sending-actions","title":"Sending actions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"]},{"anchor":"Scoping-stores","title":"Scoping stores","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher"],"anchor":"Combine-integration","title":"Combine integration"},{"anchor":"Deprecated-interfaces","title":"Deprecated interfaces","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"metadata":{"roleHeading":"Class","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"symbolKind":"class","title":"Store","role":"symbol","externalID":"s:22ComposableArchitecture5StoreC"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will typically construct a single one of these at the root of your application:"}]},{"type":"codeListing","syntax":"swift","code":["@main","struct MyApp: App {","  var body: some Scene {","    WindowGroup {","      RootView(","        store: Store(initialState: AppFeature.State()) {","          AppFeature()","        }","      )","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"text":"…and then use the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":" method to derive more focused stores that can be"},{"text":" ","type":"text"},{"type":"text","text":"passed to subviews."}]},{"level":3,"anchor":"Scoping","type":"heading","text":"Scoping"},{"inlineContent":[{"type":"text","text":"The most important operation defined on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" is the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"text":" method,","type":"text"},{"type":"text","text":" "},{"text":"which allows you to transform a store into one that deals with child state and actions. This is","type":"text"},{"text":" ","type":"text"},{"text":"necessary for passing stores to subviews that only care about a small portion of the entire","type":"text"},{"type":"text","text":" "},{"type":"text","text":"application’s domain."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, if an application has a tab view at its root with tabs for activity, search, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"profile, then we can model the domain like this:"}]},{"code":["@Reducer","struct AppFeature {","  struct State {","    var activity: Activity.State","    var profile: Profile.State","    var search: Search.State","  }","","  enum Action {","    case activity(Activity.Action)","    case profile(Profile.Action)","    case search(Search.Action)","  }","","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can construct a view for each of these domains by applying "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"a store that holds onto the full app domain in order to transform it into a store for each"},{"text":" ","type":"text"},{"type":"text","text":"subdomain:"}]},{"code":["struct AppView: View {","  let store: StoreOf<AppFeature>","","  var body: some View {","    TabView {","      ActivityView(","        store: store.scope(state: \\.activity, action: \\.activity)","      )","      .tabItem { Text(\"Activity\") }","","      SearchView(","        store: store.scope(state: \\.search, action: \\.search)","      )","      .tabItem { Text(\"Search\") }","","      ProfileView(","        store: store.scope(state: \\.profile, action: \\.profile)","      )","      .tabItem { Text(\"Profile\") }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Thread-safety","type":"heading","level":3,"text":"Thread safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Store","type":"codeVoice"},{"type":"text","text":" class is not thread-safe, and so all interactions with an instance of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"(including all of its child stores) must be done on the same thread the store was created on."},{"text":" ","type":"text"},{"type":"text","text":"Further, if the store is powering a SwiftUI or UIKit view, as is customary, then all"},{"type":"text","text":" "},{"type":"text","text":"interactions must be done on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"main"}]},{"type":"text","text":" thread."}]},{"inlineContent":[{"type":"text","text":"The reason stores are not thread-safe is due to the fact that when an action is sent to a store,"},{"text":" ","type":"text"},{"type":"text","text":"a reducer is run on the current state, and this process cannot be done from multiple threads."},{"type":"text","text":" "},{"type":"text","text":"It is possible to make this process thread-safe by introducing locks or queues, but this"},{"text":" ","type":"text"},{"text":"introduces new complications:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If done simply with ","type":"text"},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"type":"text","text":" you will incur a thread hop even when you are"},{"type":"text","text":" "},{"type":"text","text":"already on the main thread. This can lead to unexpected behavior in UIKit and SwiftUI, where"},{"text":" ","type":"text"},{"text":"sometimes you are required to do work synchronously, such as in animation blocks.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"It is possible to create a scheduler that performs its work immediately when on the main"},{"type":"text","text":" "},{"text":"thread and otherwise uses ","type":"text"},{"code":"DispatchQueue.main.async","type":"codeVoice"},{"text":" (","type":"text"},{"type":"emphasis","inlineContent":[{"text":"e.g.","type":"text"}]},{"type":"text","text":", see Combine Schedulers’"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","type":"reference","isActive":true},{"type":"text","text":")."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"This introduces a lot more complexity, and should probably not be adopted without having a very","type":"text"},{"text":" ","type":"text"},{"text":"good reason.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is why we require all actions be sent from the same thread. This requirement is in the same"},{"text":" ","type":"text"},{"text":"spirit of how ","type":"text"},{"type":"codeVoice","code":"URLSession"},{"text":" and other Apple APIs are designed. Those APIs tend to deliver their","type":"text"},{"type":"text","text":" "},{"text":"outputs on whatever thread is most convenient for them, and then it is your responsibility to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"dispatch back to the main queue if that’s what you need. The Composable Architecture makes you"},{"text":" ","type":"text"},{"text":"responsible for making sure to send actions on the main thread. If you are using an effect that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may deliver its output on a non-main thread, you must explicitly perform "},{"type":"codeVoice","code":".receive(on:)"},{"text":" in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"order to force it back on the main thread."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This approach makes the fewest number of assumptions about how effects are created and"},{"text":" ","type":"text"},{"type":"text","text":"transformed, and prevents unnecessary thread hops and re-dispatching. It also provides some"},{"type":"text","text":" "},{"type":"text","text":"testing benefits. If your effects are not responsible for their own scheduling, then in tests"},{"text":" ","type":"text"},{"type":"text","text":"all of the effects would run synchronously and immediately. You would not be able to test how"},{"type":"text","text":" "},{"text":"multiple in-flight effects interleave with each other and affect the state of your application.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"However, by leaving scheduling out of the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" we get to test these aspects of our effects"},{"text":" ","type":"text"},{"text":"if we so desire, or we can ignore if we prefer. We have that flexibility.","type":"text"}],"type":"paragraph"},{"type":"heading","level":4,"text":"Thread safety checks","anchor":"Thread-safety-checks"},{"type":"paragraph","inlineContent":[{"text":"The store performs some basic thread safety checks in order to help catch mistakes. Stores","type":"text"},{"text":" ","type":"text"},{"text":"constructed via the initializer ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","type":"reference","isActive":true},{"text":" are assumed","type":"text"},{"type":"text","text":" "},{"text":"to run only on the main thread, and so a check is executed immediately to make sure that is the","type":"text"},{"text":" ","type":"text"},{"text":"case. Further, all actions sent to the store and all scopes (see ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference","isActive":true},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"of the store are also checked to make sure that work is performed on the main thread."}]}]}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"generated":true,"anchor":"State-management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"title":"State management"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store"]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/CustomDebugStringConvertible-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","type":"topic","title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","url":"\/documentation\/composablearchitecture\/store\/customdebugstringconvertible-implementations"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-2ym6k":{"abstract":[{"type":"text","text":"Scopes the store of an identified collection to a collection of stores."}],"title":"scope(state:action:fileID:filePath:line:column:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-2ym6k","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ElementState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ElementAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","text":"IdentifiedAction","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ElementAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sk","text":"RandomAccessCollection","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"ElementState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementAction"},{"text":">>\n","kind":"text"}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Equatable-Implementations":{"title":"Equatable Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/store\/equatable-implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreDeprecations":{"abstract":[{"type":"text","text":"Review unsupported store APIs and their replacements."}],"kind":"article","type":"topic","title":"Deprecations","url":"\/documentation\/composablearchitecture\/storedeprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"url":"\/documentation\/composablearchitecture\/observablestate","title":"ObservableState","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","title":"state","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","abstract":[{"type":"text","text":"Direct access to state in the store when "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"topic","title":"Sharing state","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"text":" ","type":"text"},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"role":"article","url":"\/documentation\/composablearchitecture\/sharingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/init(initialState:reducer:withDependencies:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","abstract":[{"type":"text","text":"Initializes a store from an initial state and a reducer."}],"title":"init(initialState:reducer:withDependencies:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"reducer","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"R"},{"text":", ","kind":"text"},{"text":"withDependencies","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"url":"\/documentation\/composablearchitecture\/store\/init(initialstate:reducer:withdependencies:)"},"doc://ComposableArchitecture/14PerceptionCore11PerceptibleP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/14PerceptionCore11PerceptibleP","title":"PerceptionCore.Perceptible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"url":"\/documentation\/composablearchitecture\/storepublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A publisher of store state."}],"title":"StorePublisher","navigatorTitle":[{"text":"StorePublisher","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StorePublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreOf":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/storeof","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoreOf","kind":"identifier"}],"navigatorTitle":[{"text":"StoreOf","kind":"identifier"}],"abstract":[{"text":"A convenience type alias for referring to a store of a given reducer’s domain.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf","title":"StoreOf","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}],"title":"scope(state:action:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:transaction:)":{"role":"symbol","title":"send(_:transaction:)","type":"topic","abstract":[{"type":"text","text":"Sends an action to the store with a given transaction."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"transaction"},{"text":": ","kind":"text"},{"text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"url":"\/documentation\/composablearchitecture\/store\/send(_:transaction:)"},"doc://ComposableArchitecture/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s12IdentifiableP","title":"Swift.Identifiable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StoreTask","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/storetask","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","title":"StoreTask","kind":"symbol","navigatorTitle":[{"text":"StoreTask","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"The type returned from ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","type":"reference"},{"text":" that represents the lifecycle of the effect","type":"text"},{"type":"text","text":" "},{"text":"started from sending an action.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/store\/hashable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"abstract":[],"title":"subscript(dynamicMember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Value"}]},"https://github.com/pointfreeco/combine-schedulers/blob/main/Sources/CombineSchedulers/UIScheduler.swift":{"identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","title":"UIScheduler","type":"link","url":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","titleInlineContent":[{"type":"text","text":"UIScheduler"}]},"doc://ComposableArchitecture/11Observation10ObservableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/11Observation10ObservableP","title":"Observation.Observable"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"title":"send(_:)","abstract":[{"text":"Sends an action to the store.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/store\/send(_:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-3yvuf":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-3yvuf","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"text":"?>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Scopes the store to optional child state and actions."}],"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"scope(state:action:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateReducer","preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"CaseScope","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"code":"CaseReducerState","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"State.StateReducer.Action"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/composablearchitecture\/store\/case","title":"case"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","title":"withState(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withState","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:animation:)":{"role":"symbol","title":"send(_:animation:)","type":"topic","abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/store\/send(_:animation:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","title":"Store"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Identifiable-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/store\/identifiable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations","kind":"article","title":"Identifiable Implementations"}}}